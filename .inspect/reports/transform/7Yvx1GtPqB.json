{
  "resolvedId": "/home/marcio/Documentos/projetos/money-management/src/components/atoms/Input/index.tsx",
  "transforms": [
    {
      "name": "__load__",
      "result": "/* --- main --- */\nimport { LegacyRef, forwardRef } from \"react\";\n\n/* --- utils --- */\nimport { css } from \"@utils/css\";\n\n/* --- styles --- */\nimport { inputClass } from \"./styles\";\n\n/* --- types --- */\nimport { InputProps } from \"./types\";\n\nfunction InputComponent({ className = \"\", ...props }: InputProps, ref?: LegacyRef<HTMLInputElement>) {\n    return <input className={css(inputClass, className)} ref={ref} {...props} />;\n}\n\nexport const Input = forwardRef(InputComponent);\n",
      "start": 1750620938353,
      "end": 1750620938353
    },
    {
      "name": "vite:css",
      "start": 1750620938353,
      "end": 1750620938353,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1750620938353,
      "end": 1750620938353,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1750620938353,
      "end": 1750620938353,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "result": "import * as RefreshRuntime from \"/@react-refresh\";\nconst inWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n\nlet prevRefreshReg;\nlet prevRefreshSig;\n\nif (import.meta.hot && !inWebWorker) {\n  if (!window.$RefreshReg$) {\n    throw new Error(\n      \"@vitejs/plugin-react-swc can't detect preamble. Something is wrong.\"\n    );\n  }\n\n  prevRefreshReg = window.$RefreshReg$;\n  prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = RefreshRuntime.getRefreshReg(\"/home/marcio/Documentos/projetos/money-management/src/components/atoms/Input/index.tsx\");\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n}\n\n/* --- main --- */ import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { forwardRef } from \"react\";\n/* --- utils --- */ import { css } from \"@utils/css\";\n/* --- styles --- */ import { inputClass } from \"./styles\";\nfunction InputComponent({ className = \"\", ...props }, ref) {\n    return /*#__PURE__*/ _jsxDEV(\"input\", {\n        className: css(inputClass, className),\n        ref: ref,\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/marcio/Documentos/projetos/money-management/src/components/atoms/Input/index.tsx\",\n        lineNumber: 14,\n        columnNumber: 12\n    }, this);\n}\n_c = InputComponent;\nexport const Input = /*#__PURE__*/ forwardRef(InputComponent);\n_c1 = Input;\nvar _c, _c1;\n$RefreshReg$(_c, \"InputComponent\");\n$RefreshReg$(_c1, \"Input\");\n\n\nif (import.meta.hot && !inWebWorker) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n}\n\n\nif (import.meta.hot && !inWebWorker) {\n  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n    RefreshRuntime.registerExportsForReactRefresh(\"/home/marcio/Documentos/projetos/money-management/src/components/atoms/Input/index.tsx\", currentExports);\n    import.meta.hot.accept((nextExports) => {\n      if (!nextExports) return;\n      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(\"/home/marcio/Documentos/projetos/money-management/src/components/atoms/Input/index.tsx\", currentExports, nextExports);\n      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);\n    });\n  });\n}\n",
      "start": 1750620938353,
      "end": 1750620938372,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "index.tsx"
        ],
        "sourcesContent": [
          "/* --- main --- */\nimport { LegacyRef, forwardRef } from \"react\";\n\n/* --- utils --- */\nimport { css } from \"@utils/css\";\n\n/* --- styles --- */\nimport { inputClass } from \"./styles\";\n\n/* --- types --- */\nimport { InputProps } from \"./types\";\n\nfunction InputComponent({ className = \"\", ...props }: InputProps, ref?: LegacyRef<HTMLInputElement>) {\n    return <input className={css(inputClass, className)} ref={ref} {...props} />;\n}\n\nexport const Input = forwardRef(InputComponent);\n"
        ],
        "names": [
          "forwardRef",
          "css",
          "inputClass",
          "InputComponent",
          "className",
          "props",
          "ref",
          "input",
          "Input"
        ],
        "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,gBAAgB;AAChB,SAAoBA,UAAU,QAAQ,QAAQ;AAE9C,iBAAiB,GACjB,SAASC,GAAG,QAAQ,aAAa;AAEjC,kBAAkB,GAClB,SAASC,UAAU,QAAQ,WAAW;AAKtC,SAASC,eAAe,EAAEC,YAAY,EAAE,EAAE,GAAGC,OAAmB,EAAEC,GAAiC;IAC/F,qBAAO,QAACC;QAAMH,WAAWH,IAAIC,YAAYE;QAAYE,KAAKA;QAAM,GAAGD,KAAK;;;;;;AAC5E;KAFSF;AAIT,OAAO,MAAMK,sBAAQR,WAAWG,gBAAgB"
      }
    },
    {
      "name": "vite:define",
      "start": 1750620938372,
      "end": 1750620938372,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1750620938372,
      "end": 1750620938372,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1750620938372,
      "end": 1750620938372,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1750620938372,
      "end": 1750620938372,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1750620938372,
      "end": 1750620938372,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1750620938372,
      "end": 1750620938372,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1750620938372,
      "end": 1750620938372,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import { createHotContext as __vite__createHotContext } from \"/@vite/client\";import.meta.hot = __vite__createHotContext(\"/src/components/atoms/Input/index.tsx\");import * as RefreshRuntime from \"/@react-refresh\";\nconst inWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n\nlet prevRefreshReg;\nlet prevRefreshSig;\n\nif (import.meta.hot && !inWebWorker) {\n  if (!window.$RefreshReg$) {\n    throw new Error(\n      \"@vitejs/plugin-react-swc can't detect preamble. Something is wrong.\"\n    );\n  }\n\n  prevRefreshReg = window.$RefreshReg$;\n  prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = RefreshRuntime.getRefreshReg(\"/home/marcio/Documentos/projetos/money-management/src/components/atoms/Input/index.tsx\");\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n}\n\n/* --- main --- */ import __vite__cjsImport2_react_jsxDevRuntime from \"/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=d4130fc4\"; const _jsxDEV = __vite__cjsImport2_react_jsxDevRuntime[\"jsxDEV\"];\nimport __vite__cjsImport3_react from \"/node_modules/.vite/deps/react.js?v=d4130fc4\"; const forwardRef = __vite__cjsImport3_react[\"forwardRef\"];\n/* --- utils --- */ import { css } from \"/src/utils/css.ts\";\n/* --- styles --- */ import { inputClass } from \"/src/components/atoms/Input/styles.ts\";\nfunction InputComponent({ className = \"\", ...props }, ref) {\n    return /*#__PURE__*/ _jsxDEV(\"input\", {\n        className: css(inputClass, className),\n        ref: ref,\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/marcio/Documentos/projetos/money-management/src/components/atoms/Input/index.tsx\",\n        lineNumber: 14,\n        columnNumber: 12\n    }, this);\n}\n_c = InputComponent;\nexport const Input = /*#__PURE__*/ forwardRef(InputComponent);\n_c1 = Input;\nvar _c, _c1;\n$RefreshReg$(_c, \"InputComponent\");\n$RefreshReg$(_c1, \"Input\");\n\n\nif (import.meta.hot && !inWebWorker) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n}\n\n\nif (import.meta.hot && !inWebWorker) {\n  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n    RefreshRuntime.registerExportsForReactRefresh(\"/home/marcio/Documentos/projetos/money-management/src/components/atoms/Input/index.tsx\", currentExports);\n    import.meta.hot.accept((nextExports) => {\n      if (!nextExports) return;\n      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(\"/home/marcio/Documentos/projetos/money-management/src/components/atoms/Input/index.tsx\", currentExports, nextExports);\n      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);\n    });\n  });\n}\n",
      "start": 1750620938372,
      "end": 1750620938373,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
